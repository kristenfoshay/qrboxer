version: '3.8'
services:
  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  test-db:
    image: postgres:14
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    ports:
      - "5433:5432"
    volumes:
      - test-db-data:/var/lib/postgresql/data
      - ./server/db/qrboxer-schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db && psql -U test_user -d test_db -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=128MB
    networks:
      - app-network

  tests:
    build: 
      context: ./server
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DB_HOST=test-db
      - DB_PORT=5432
      - DB_USER=test_user
      - DB_PASSWORD=test_password
      - DB_NAME=test_db
    command: npm test -- --verbose --detectOpenHandles --runInBand
    depends_on:
      test-db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  test-db-data:

